# Setting PATH for Python 3.6
# The original version is saved in .bash_profile.pysave
export PATH="/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}"

# Add rust binary files to the path variable
export PATH="$HOME/.cargo/bin:$PATH"

# Setup Go environment variables, and add go's bin to PATH
export GOPATH="$HOME/go";
export GOROOT="$HOME/.go";
export PATH="$GOPATH/bin:$PATH";

# Add this to your ~/.bash_profile file:
export NODE_PATH="/usr/local/lib/node_modules"

### Alias python2 to python3
alias python=python3

### Functions and Aliases ###

alias serve='python3 -m http.server $1'

# Source this file.
alias src="source ~/.bash_profile"

# A quick and dirty find and replace script on a given file.
function sid() {
    cat "$1" | sed "s/"$2"/"$3"/g" > temp
    mv temp "$1"
}

function beep() {
    printf "\a"
}

## emacs aliases ##

alias emacs=/Applications/Emacs.app/Contents/MacOS/Emacs

## cd aliases ##

alias ..='cd ../'
alias ...='cd ../../'
alias ....='cd ../../../'

## docker aliases ##

alias ds='docker ps'
alias dk='docker kill $(docker ps -q)'

## git aliases ##

alias whichbranch='git branch -a --contains $1'

alias gl='git log'
alias gs='git status'
alias gd='git diff HEAD'

alias ga='git add'
alias gall='git add -A'
alias gcm='git commit -m'
alias gca='git commit --amend'
alias gp='git push origin HEAD'
alias grd='git fetch origin; git rebase origin/development'
alias gdv='git checkout development'

## filesystem functions ##

### Uses the working directory path to derive the closest parent directory name that matches
### a regular expression.
### @param($1): This is the regex that should match the parent
### @param($2): This is the stop directory. This defaults to the / directory.
function find_parent_that_matches() {
    current_dir=$(pwd)
    match="$1"
    stop="$2"
    while [[ $current_dir != $stop ]]; do
        if [[ $(basename $current_dir) =~ $match ]]; then
            echo $current_dir
            break
        fi
        current_dir=$(dirname $current_dir)
    done
}

## vim ##

alias vimc='vim $CURRENT_FILE'

## git ##

function gc() {
    git add -A && git commit -m "$1"
}

function gcm() {
    git add -A && git commit -m "$1"
}

function vga() {
    vim "$1" && git add -A "$1"
}

## 0x Monorepo ##

MAIN_BRANCH=3.0

alias yc="yarn clean"
alias yb="yarn build"
alias yt="yarn test"
alias yl="yarn lint"
alias ybt="yb && yt"
alias yall="yb && yt && yl"

function ybc() {
    old=$(pwd)
    parent=$(find_parent_that_matches "^0x-monorepo" $HOME)
    cd $parent
    yarn build:contracts
    cd $old
}

function ytc() {
    old=$(pwd)
    parent=$(find_parent_that_matches "^0x-monorepo" $HOME)
    cd $parent
    yarn test:contracts
    cd $old
}

function ylc() {
    old=$(pwd)
    parent=$(find_parent_that_matches "^0x-monorepo" $HOME)
    cd $parent
    yarn lint:contracts
    cd $old
}

function yp() {
    old=$(pwd)
    parent=$(find_parent_that_matches "^0x-monorepo" $HOME)
    cd $parent
    yarn prettier
    cd $old
}

function ycall() {
    ybc && ytc && ylc && yp
}

function refresh() {
    old=$(pwd)
    parent=$(find_parent_that_matches "^0x-monorepo" $HOME)
    cd $parent
    git checkout $MAIN_BRANCH
    git pull origin $MAIN_BRANCH
    yarn clean
    yarn
    yb
    ybc
    cd $old
}

## 0x Mesh ##

alias m="VERBOSITY=5 ETHEREUM_RPC_URL=https://mainnet.infura.io/v3/f9686e8c08a844a29e6bb0cdea7c1411 ETHEREUM_CHAIN_ID=1 mesh | grep --line-buffered -E '^{' | while read -r LINE; do echo -E "$LINE" | jq -r '.timestamp + "\t" + .level + "\t" + .message'; done"
alias mm='make mesh'
alias mt='make test-all'
alias cr='make cut-release'

## 0x API ##

alias pg_start="launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias pg_stop="launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"

## Rust Functions ##

function cb() {
    cargo build
}

function cc() {
    cargo check
}

function ct() {
    cargo test
}

function cbt() {
    cargo build && cargo test
}

## Setup for the "Node Version Manager" ##
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
nvm use 10

## Enable Bash Powerline ##
source ~/.bash-powerline.sh

## Enable git completion for bash ##
[ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion || {
    # if not found in /usr/local/etc, try the brew --prefix location
    [ -f "$(brew --prefix)/etc/bash_completion.d/git-completion.bash" ] && \
        . $(brew --prefix)/etc/bash_completion.d/git-completion.bash
}

## Changes made for 0x-mesh ##

alias fmt="gofmt -s "$1" > .fmt.temp; mv .fmt.temp "$1""

# Increase number of open files that are tolerated
ulimit -S -n 4096

[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

# Add Wabt tools to path
PATH="$PATH":$HOME/wabt/bin

export GOPATH="$HOME/go"; export GOROOT="$HOME/.go"; export PATH="$GOPATH/bin:$PATH"; # g-install: do NOT edit, see https://github.com/stefanmaric/g

complete -C /Users/alextowle/go/bin/gocomplete go

# Bash autocompletion for Makefile
complete -W "\`grep -oE '^[a-zA-Z0-9_.-]+:([^=]|$)' ?akefile | sed 's/[^a-zA-Z0-9_.-]*$//'\`" make
