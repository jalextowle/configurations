# Setting PATH for Python 3.6
# The original version is saved in .bash_profile.pysave
export PATH="/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}"

# Add rust binary files to the path variable
export PATH="$HOME/.cargo/bin:$PATH"

# Set the GOPATH environment variable and the path variable to include the GOPATH's bin
export GOPATH="$HOME/go"
export PATH=$PATH:$GOPATH/bin

# Add this to your ~/.bash_profile file:
export NODE_PATH="/usr/local/lib/node_modules"

### Alias python2 to python3
alias python=python3

### Functions and Aliases ###

# A quick and dirty find and replace script on a given file.
function sid() {
    cat "$1" | sed "s/"$2"/"$3"/g" > temp
    mv temp "$1"
}

## cd aliases ##

alias ..='cd ../'
alias ...='cd ../../'
alias ....='cd ../../../'

## filesystem functions ##

### Uses the working directory path to derive the closest parent directory name that matches
### a regular expression.
### @param($1): This is the regex that should match the parent
### @param($2): This is the stop directory. This defaults to the / directory.
function find_parent_that_matches() {
    current_dir=$(pwd)
    match="$1"
    stop="$2"
    while [[ $current_dir != $stop ]]; do
        if [[ $(basename $current_dir) =~ $match ]]; then
            echo $current_dir
            break
        fi
        current_dir=$(dirname $current_dir)
    done
}

## vim aliases ##

alias vimc='vim $CURRENT_FILE'

## 0x aliases ##

function yb() {
    yarn build
}

function yt() {
    yarn test
}

function yl() {
    yarn lint
}

function ybt() {
    yb && yt
}

function yall() {
    yb && yt && yl
}

function ypall() {
    yb && yt && yl && yp
}

function ybc() {
  old=$(pwd)
  parent=$(find_parent_that_matches "^0x-monorepo" $HOME)
  cd $parent
  yarn build:contracts
  cd $old
}

function ytc() {
  old=$(pwd)
  parent=$(find_parent_that_matches "^0x-monorepo" $HOME)
  cd $parent
  yarn test:contracts
  cd $old
}

function ylc() {
  old=$(pwd)
  parent=$(find_parent_that_matches "^0x-monorepo" $HOME)
  cd $parent
  yarn lint:contracts
  cd $old
}

function yp() {
  old=$(pwd)
  parent=$(find_parent_that_matches "^0x-monorepo" $HOME)
  cd $parent
  yarn prettier
  cd $old
}

function ycall() {
    ybc && ytc && ylc && yp
}

## Rust Functions ##

function cb() {
    cargo build
}

function cc() {
    cargo check
}

function ct() {
    cargo test
}

function cbt() {
    cargo build && cargo test
}

## Setup for the "Node Version Manager" ##
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

## Enable Bash Powerline ##
source ~/.bash-powerline.sh

## Enable git completion for bash ##
[ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion || {
    # if not found in /usr/local/etc, try the brew --prefix location
    [ -f "$(brew --prefix)/etc/bash_completion.d/git-completion.bash" ] && \
        . $(brew --prefix)/etc/bash_completion.d/git-completion.bash
}
